#problem link : https://leetcode.com/problems/3sum

vector<vector<int>> threeSum(vector<int>& nums) {
  
  vector<vector<int>> v{};
    
    if(nums.size() < 3)
      return v;
  
  int target = 0;  
  
  sort(nums.begin(),nums.end());
  
  int currentNum,currentSum,l,r,currentR;
  
  for(int i = 0; i < nums.size();i++){
      
      if(currentNum == nums[i])
          continue;
    
    currentNum = nums[i];
    
    l = i+1;
    
    r = nums.size()-1;
    
    int currentL = 10;
    
    while(l < r){ 
      
      currentSum = currentNum +nums[l] + nums[r];
      
      if(!currentSum){
        
        vector<int> temp{currentNum,nums[l],nums[r]};
           
           v.push_back(temp);
        
        currentL = nums[l];
        
        l++;
        
        while(currentL == nums[l] && l < r)
          
          l++;
        }
     
     else if(currentSum < 0)
        l++;
     
     else r--;
    }
  }
  return v;
    }
